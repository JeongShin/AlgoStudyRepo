let Graph;_829‍.w("./Graphs",[["Graph",["Graph"],function(v){Graph=v}]]);


class DFS_RECUR extends Graph {
    depthFirstSearch(start) {
        const result = [];
        const visited = {};
        const adjacencyList = this.adjacencyList;
        (function dfs(vertex) {
            if (!vertex) return null;
            visited[vertex] = true;
            result.push(vertex);
            // console.log(this.adjacencyList[vertex]) -> error
            _829‍.g.console.log(adjacencyList[vertex]);
        })(start)
    }
}

const g = new Graph();
g.addVertex("A");
g.addVertex("B");
g.addVertex("C");
g.addVertex("D");
g.addVertex("E");
g.addVertex("F");
g.addEdge("A", "B");
g.addEdge("A", "C");
g.addEdge("B", "D");
g.addEdge("C", "E");
g.addEdge("D", "E");
g.addEdge("D", "F");
g.addEdge("E", "F");
